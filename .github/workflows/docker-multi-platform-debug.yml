name: Multi-Platform Docker Build (Debug)

on:
  push:
    branches: [ "main" ]
    paths:
      - 'dist/**'
      - 'index.html'
      - 'docker/**'
  workflow_dispatch:

env:
  DOCKER_USER: "hraulein"
  CONTAINER_NAME: "mind-map"
  UPSTREAM_REPO: "wanglin2/mind-map"

jobs:
  check-updates:
    runs-on: ubuntu-22.04
    outputs:
      should_build: ${{ steps.decide.outputs.should_build }}
      release_tag: ${{ steps.check_release.outputs.latest_tag || 'none' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check modified files
        id: check_files
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          echo "changed_files=${CHANGED_FILES}" >> $GITHUB_OUTPUT
          [[ "$CHANGED_FILES" =~ ^(dist/|index\.html|docker/).* ]] && echo "files_changed=true" >> $GITHUB_OUTPUT

      # 修复：使用完整action路径和指定版本
      - name: Check releases
        id: check_release
        uses: dawidd6/action-get-latest-release@v2.1.1
        with:
          repository: ${{ env.UPSTREAM_REPO }}
          skipPrereleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Decide build
        id: decide
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]] || \
             [[ "${{ steps.check_files.outputs.files_changed }}" == "true" ]]; then
            echo "should_build=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "should_build=${{ steps.check_release.outputs.release != '' }}" >> $GITHUB_OUTPUT
          echo "release_tag=${{ steps.check_release.outputs.tag || 'none' }}" >> $GITHUB_OUTPUT

  build:
    needs: check-updates
    if: needs.check-updates.outputs.should_build == 'true'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup build utils
        run: |
          chmod +x .github/scripts/build_utils.sh
          echo "GIT_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV

      - name: Generate Docker tags
        id: tags
        run: |
          echo "TAGS=$(.github/scripts/build_utils.sh generate_tags \
            "${{ env.DOCKER_USER }}" \
            "${{ env.CONTAINER_NAME }}" \
            "${{ needs.check-updates.outputs.release_tag }}" \
            "${{ env.GIT_SHA }}")" >> $GITHUB_ENV
          echo "PRIMARY_TAG=${TAGS%%,*}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/multi-platform/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ env.TAGS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}"
            "DOCKERHUB_TOKEN=${{ secrets.DOCKERHUB_TOKEN }}"

      - name: Send notification
        if: always()
        env:
          TRIGGER_REASON: ${{ 
            github.event_name == 'workflow_dispatch' && '手动触发' ||
            contains(needs.check-updates.outputs.changed_files, 'dist/') && '前端变更' ||
            contains(needs.check-updates.outputs.changed_files, 'docker/') && 'Docker配置变更' ||
            'Release更新' }}
        run: |
          .github/scripts/build_utils.sh send_notification \
            "${{ secrets.GOTIFY_SERVER }}" \
            "${{ secrets.GOTIFY_TOKEN }}" \
            "${{ env.CONTAINER_NAME }}" \
            "${{ job.status }}" \
            "${{ env.TRIGGER_REASON }}" \
            "${{ env.PRIMARY_TAG }}" \
            "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
